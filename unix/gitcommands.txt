git init (Idicar carpeta central de archivos)
git config global user.name (Configurar git a nuestro nombre)
git clone %linkdegithub (Descargar proyecto de github)
git add (Agregar archivo al staging)
git rm --cached (Eliminamos el archivo del staging)
git commit -am (Hace funcion de add y commit juntas)
git commit -m (Mandar archivo al repositorio con un mensaje)
git status (Muestra el status del proyecto)
git log (Muestra el historial del commit)
git log --stat (Muestra cambios de los commits)
git show (Muestra cambios hechos al un archivo en el ultimo commit)
git diff (Muestra cambios entre staging y lo anterior)
git reset #commit --sfot (Volvemos a una versi칩n de commit sin eliminar los otros)
git reset HEAD (Pasa los archivos de staging a unstaged)
git reset #commit --hard (Volvemos a una versi칩n de commit eliminando todos los demas)
git checkout #commit #archivo (Volvemos a una versi칩n de commmit sin cambiar nada en el staging)
git branch %nuevarama (Creamos una nueva rama)
git branch -D %nombrerama (Eliminamos la rama)
git merge %rama (Combinamos la rama actual en la que estamos y la que mandamos a llamar con el comando)
git tag -a %nombredeltag %idcommit (Crear tag)
git tag -d %nombredeltag (Eliminar tag)
git tag (Listar tags)
git show-ref --tags (Listar tags)
git stash (Guardas cambios en memoria antes de hacer add)
git stash list (Miras los stash en memoria)
git stash pop (Devuelves los cambios a los archivos)
git stash drop (Eliminas el stash de la memoria)
git stash branch %nombrerama (Mueves el stash a la otra rama) 
git clean --dry-run (Muestra todo lo que borrar치)
git clean -f (Ejecuta el comando de borrar)
git commit --amend (Agrega los cambios que estan en staging al ultimo commit)
git reflog (Historia commit)
git reset --HARD %commit (Vuelve hasta ese y reccupera todo hasta lo borrado)

